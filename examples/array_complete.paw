// 数组功能完整示例 - 展示所有数组特性

fn main() -> i32 {
    // ✅ 1. 数组字面量（类型推断）
    let numbers = [1, 2, 3, 4, 5];
    
    // ✅ 2. 显式数组类型（动态大小）
    let explicit: [i32] = [10, 20, 30];
    
    // ✅ 3. 固定大小数组类型
    let fixed: [i32; 4] = [100, 200, 300, 400];
    
    // ✅ 4. 可变数组
    let mut mutable = [7, 8, 9];
    
    // ✅ 5. 数组索引读取
    let n1 = numbers[0];
    let e1 = explicit[1];
    let f1 = fixed[2];
    
    // ✅ 6. 数组索引赋值
    mutable[0] = 70;
    mutable[1] = 80;
    mutable[2] = 90;
    
    // ✅ 7. 多次访问
    let sum1 = n1 + e1 + f1;           // 1 + 20 + 300 = 321
    let sum2 = mutable[0] + mutable[1] + mutable[2];  // 70 + 80 + 90 = 240
    
    // 返回 (321 % 256) + (240 % 256) = 65 + 240 = 49
    return sum1 % 256 + sum2 % 256;
}
